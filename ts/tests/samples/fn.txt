(fn x -> x + x) 2
/*
0x0000   LEA dest: R0 offset: 9
0x0001   LD dest: R1 offset: 37
0x0002   STR src: R0 base: R1 offset: 0
0x0003   LD dest: R0 offset: 36
0x0004   STR src: R0 base: R1 offset: 1
0x0005   LEA dest: R0 offset: 5
0x0006   STR src: R0 base: R1 offset: 2
0x0007   LD dest: R0 offset: 31
0x0008   LDR dest: R0 base: R0 offset: 2
0x0009   JMP base: R0
0x000a   TRAP trapCode: 0x0025
0x000b   LD dest: R0 offset: 27
0x000c   LDR dest: R0 base: R0 offset: 1
0x000d   LD dest: R1 offset: 25
0x000e   STR src: R0 base: R1 offset: 2
0x000f   LD dest: R0 offset: 23
0x0010   LDR dest: R0 base: R0 offset: 1
0x0011   STR src: R0 base: R1 offset: 3
0x0012   LD dest: R0 offset: 20
0x0013   LDR dest: R0 base: R0 offset: 3
0x0014   LDR dest: R1 base: R1 offset: 2
0x0015   ADD dest: R0 src: R1 immFlag: 0 value: R0
0x0016   LD dest: R1 offset: 16
0x0017   STR src: R0 base: R1 offset: 2
0x0018   LD dest: R0 offset: 14
0x0019   LDR dest: R0 base: R0 offset: 2
0x001a   LDR dest: R1 base: R1 offset: 0
0x001b   LD dest: R2 offset: 11
0x001c   STR src: R0 base: R2 offset: 0
0x001d   STR src: R1 base: R2 offset: 2
0x001e   LD dest: R1 offset: 8
0x001f   LDR dest: R1 base: R1 offset: 2
0x0020   LD dest: R0 offset: 6
0x0021   LDR dest: R0 base: R0 offset: 1
0x0022   STR src: R1 base: R2 offset: 1
0x0023   STR src: R0 base: R2 offset: 2
0x0024   LD dest: R0 offset: 2
0x0025   LDR dest: R0 base: R0 offset: 1
0x0026   JMP base: R0
0x0027   0x3029 |  12329 | 〩
0x0028   0x0002 |      2 | ☻
*/