(fn x -> x + x) 2
/*
0x0000   LEA dest: R0 offset: 11
0x0001   LD dest: R1 offset: 40
0x0002   STR src: R0 base: R1 offset: 0
0x0003   LD dest: R2 offset: 39
0x0004   STR src: R2 base: R1 offset: 1
0x0005   LEA dest: R3 offset: 7
0x0006   STR src: R3 base: R1 offset: 2
0x0007   LD dest: R3 offset: 34
0x0008   LDR dest: R3 base: R3 offset: 2
0x0009   STR src: R0 base: R1 offset: 0
0x000a   STR src: R2 base: R1 offset: 1
0x000b   JMP base: R3
0x000c   TRAP trapCode: 0x0025
0x000d   LD dest: R0 offset: 28
0x000e   LDR dest: R0 base: R0 offset: 1
0x000f   LD dest: R1 offset: 26
0x0010   STR src: R0 base: R1 offset: 2
0x0011   LD dest: R2 offset: 24
0x0012   LDR dest: R2 base: R2 offset: 1
0x0013   STR src: R2 base: R1 offset: 3
0x0014   LD dest: R2 offset: 21
0x0015   LDR dest: R2 base: R2 offset: 3
0x0016   LD dest: R0 offset: 19
0x0017   LDR dest: R0 base: R0 offset: 2
0x0018   ADD dest: R2 src: R0 immFlag: 0 value: R2
0x0019   STR src: R2 base: R1 offset: 2
0x001a   LD dest: R0 offset: 15
0x001b   LDR dest: R0 base: R0 offset: 2
0x001c   LD dest: R3 offset: 13
0x001d   LDR dest: R3 base: R3 offset: 0
0x001e   STR src: R0 base: R1 offset: 0
0x001f   STR src: R3 base: R1 offset: 2
0x0020   LD dest: R3 offset: 9
0x0021   LDR dest: R3 base: R3 offset: 2
0x0022   LD dest: R0 offset: 7
0x0023   LDR dest: R0 base: R0 offset: 1
0x0024   STR src: R3 base: R1 offset: 1
0x0025   STR src: R0 base: R1 offset: 2
0x0026   LD dest: R2 offset: 3
0x0027   LDR dest: R2 base: R2 offset: 1
0x0028   STR src: R0 base: R1 offset: 2
0x0029   JMP base: R2
0x002a   0x302c |  12332 | 〬
0x002b   0x0002 |      2 | ☻
*/