// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`expressions > function expressions > function 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > function expressions > function multiple params 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "fn",
}
`;

exports[`expressions > function expressions > function with deep shadowed name access 1`] = `
{
  "children": [
    {
      "children": [],
      "data": {
        "scope": Scope {
          "names": {
            "#": 1,
            "fn": 0,
          },
          "scope": [
            {
              "name": "fn",
              "value": {
                "precedence": [
                  null,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
          ],
        },
      },
      "name": "name",
      "value": "a",
    },
    {
      "children": [
        {
          "children": [],
          "data": {
            "scope": Scope {
              "names": {
                "#": 1,
                "a": 2,
                "fn": 0,
              },
              "scope": [
                {
                  "name": "fn",
                  "value": {
                    "precedence": [
                      null,
                      2,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "#",
                  "value": {
                    "precedence": [
                      null,
                      4,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "a",
                  "value": {},
                },
              ],
            },
          },
          "name": "name",
          "value": "a",
        },
        {
          "children": [
            {
              "children": [],
              "data": {
                "scope": Scope {
                  "names": {
                    "#": 1,
                    "a": 3,
                    "fn": 0,
                  },
                  "scope": [
                    {
                      "name": "fn",
                      "value": {
                        "precedence": [
                          null,
                          2,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "#",
                      "value": {
                        "precedence": [
                          null,
                          4,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                  ],
                },
              },
              "name": "name",
              "value": "a",
            },
            {
              "children": [
                {
                  "children": [
                    {
                      "children": [],
                      "data": {
                        "relativeIndex": 0,
                        "scope": Scope {
                          "names": {
                            "#": 1,
                            "a": 4,
                            "fn": 0,
                          },
                          "scope": [
                            {
                              "name": "fn",
                              "value": {
                                "precedence": [
                                  null,
                                  2,
                                ],
                                "separators": [Function],
                              },
                            },
                            {
                              "name": "#",
                              "value": {
                                "precedence": [
                                  null,
                                  4,
                                ],
                                "separators": [Function],
                              },
                            },
                            {
                              "name": "a",
                              "value": {},
                            },
                            {
                              "name": "a",
                              "value": {},
                            },
                            {
                              "name": "a",
                              "value": {},
                            },
                          ],
                        },
                      },
                      "name": "name",
                      "value": "a",
                    },
                  ],
                  "data": {
                    "relativeIndex": 1,
                    "scope": Scope {
                      "names": {
                        "#": 1,
                        "a": 4,
                        "fn": 0,
                      },
                      "scope": [
                        {
                          "name": "fn",
                          "value": {
                            "precedence": [
                              null,
                              2,
                            ],
                            "separators": [Function],
                          },
                        },
                        {
                          "name": "#",
                          "value": {
                            "precedence": [
                              null,
                              4,
                            ],
                            "separators": [Function],
                          },
                        },
                        {
                          "name": "a",
                          "value": {},
                        },
                        {
                          "name": "a",
                          "value": {},
                        },
                        {
                          "name": "a",
                          "value": {},
                        },
                      ],
                    },
                  },
                  "name": "operator",
                  "value": "#",
                },
              ],
              "data": {
                "relativeIndex": 2,
                "scope": Scope {
                  "names": {
                    "#": 1,
                    "a": 4,
                    "fn": 0,
                  },
                  "scope": [
                    {
                      "name": "fn",
                      "value": {
                        "precedence": [
                          null,
                          2,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "#",
                      "value": {
                        "precedence": [
                          null,
                          4,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                  ],
                },
              },
              "name": "operator",
              "value": "#",
            },
          ],
          "data": {
            "scope": Scope {
              "names": {
                "#": 1,
                "a": 3,
                "fn": 0,
              },
              "scope": [
                {
                  "name": "fn",
                  "value": {
                    "precedence": [
                      null,
                      2,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "#",
                  "value": {
                    "precedence": [
                      null,
                      4,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "a",
                  "value": {},
                },
                {
                  "name": "a",
                  "value": {},
                },
              ],
            },
          },
          "name": "operator",
          "value": "fn",
        },
      ],
      "data": {
        "scope": Scope {
          "names": {
            "#": 1,
            "a": 2,
            "fn": 0,
          },
          "scope": [
            {
              "name": "fn",
              "value": {
                "precedence": [
                  null,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "a",
              "value": {},
            },
          ],
        },
      },
      "name": "operator",
      "value": "fn",
    },
  ],
  "data": {
    "scope": Scope {
      "names": {
        "#": 1,
        "fn": 0,
      },
      "scope": [
        {
          "name": "fn",
          "value": {
            "precedence": [
              null,
              2,
            ],
            "separators": [Function],
          },
        },
        {
          "name": "#",
          "value": {
            "precedence": [
              null,
              4,
            ],
            "separators": [Function],
          },
        },
      ],
    },
  },
  "name": "operator",
  "value": "fn",
}
`;

exports[`expressions > function expressions > function with placeholder arg 1`] = `
{
  "children": [
    {
      "children": [],
      "data": {
        "scope": Scope {
          "names": {
            "#": 1,
            "->": 0,
          },
          "scope": [
            {
              "name": "->",
              "value": {
                "precedence": [
                  Infinity,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
          ],
        },
      },
      "name": "placeholder",
    },
    {
      "children": [
        {
          "children": [],
          "data": {
            "scope": Scope {
              "names": {
                "#": 1,
                "->": 0,
              },
              "scope": [
                {
                  "name": "->",
                  "value": {
                    "precedence": [
                      Infinity,
                      2,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "#",
                  "value": {
                    "precedence": [
                      null,
                      4,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "value": {},
                },
              ],
            },
          },
          "name": "int",
          "value": 0,
        },
      ],
      "data": {
        "relativeIndex": 0,
        "scope": Scope {
          "names": {
            "#": 1,
            "->": 0,
          },
          "scope": [
            {
              "name": "->",
              "value": {
                "precedence": [
                  Infinity,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
            {
              "value": {},
            },
          ],
        },
      },
      "name": "operator",
      "value": "#",
    },
  ],
  "data": {
    "scope": Scope {
      "names": {
        "#": 1,
        "->": 0,
      },
      "scope": [
        {
          "name": "->",
          "value": {
            "precedence": [
              Infinity,
              2,
            ],
            "separators": [Function],
          },
        },
        {
          "name": "#",
          "value": {
            "precedence": [
              null,
              4,
            ],
            "separators": [Function],
          },
        },
      ],
    },
  },
  "name": "operator",
  "value": "->",
}
`;

exports[`expressions > function expressions > function with shadowed name access 1`] = `
{
  "children": [
    {
      "children": [],
      "data": {
        "scope": Scope {
          "names": {
            "#": 1,
            "fn": 0,
          },
          "scope": [
            {
              "name": "fn",
              "value": {
                "precedence": [
                  null,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
          ],
        },
      },
      "name": "name",
      "value": "a",
    },
    {
      "children": [
        {
          "children": [],
          "data": {
            "scope": Scope {
              "names": {
                "#": 1,
                "a": 2,
                "fn": 0,
              },
              "scope": [
                {
                  "name": "fn",
                  "value": {
                    "precedence": [
                      null,
                      2,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "#",
                  "value": {
                    "precedence": [
                      null,
                      4,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "a",
                  "value": {},
                },
              ],
            },
          },
          "name": "name",
          "value": "a",
        },
        {
          "children": [
            {
              "children": [],
              "data": {
                "relativeIndex": 0,
                "scope": Scope {
                  "names": {
                    "#": 1,
                    "a": 3,
                    "fn": 0,
                  },
                  "scope": [
                    {
                      "name": "fn",
                      "value": {
                        "precedence": [
                          null,
                          2,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "#",
                      "value": {
                        "precedence": [
                          null,
                          4,
                        ],
                        "separators": [Function],
                      },
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                    {
                      "name": "a",
                      "value": {},
                    },
                  ],
                },
              },
              "name": "name",
              "value": "a",
            },
          ],
          "data": {
            "relativeIndex": 1,
            "scope": Scope {
              "names": {
                "#": 1,
                "a": 3,
                "fn": 0,
              },
              "scope": [
                {
                  "name": "fn",
                  "value": {
                    "precedence": [
                      null,
                      2,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "#",
                  "value": {
                    "precedence": [
                      null,
                      4,
                    ],
                    "separators": [Function],
                  },
                },
                {
                  "name": "a",
                  "value": {},
                },
                {
                  "name": "a",
                  "value": {},
                },
              ],
            },
          },
          "name": "operator",
          "value": "#",
        },
      ],
      "data": {
        "scope": Scope {
          "names": {
            "#": 1,
            "a": 2,
            "fn": 0,
          },
          "scope": [
            {
              "name": "fn",
              "value": {
                "precedence": [
                  null,
                  2,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "#",
              "value": {
                "precedence": [
                  null,
                  4,
                ],
                "separators": [Function],
              },
            },
            {
              "name": "a",
              "value": {},
            },
          ],
        },
      },
      "name": "operator",
      "value": "fn",
    },
  ],
  "data": {
    "scope": Scope {
      "names": {
        "#": 1,
        "fn": 0,
      },
      "scope": [
        {
          "name": "fn",
          "value": {
            "precedence": [
              null,
              2,
            ],
            "separators": [Function],
          },
        },
        {
          "name": "#",
          "value": {
            "precedence": [
              null,
              4,
            ],
            "separators": [Function],
          },
        },
      ],
    },
  },
  "name": "operator",
  "value": "fn",
}
`;

exports[`expressions > pattern matching > arrow function pattern union 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "(",
}
`;

exports[`expressions > pattern matching > binding visible in scope where it is true 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > in function parameters 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "(",
}
`;

exports[`expressions > pattern matching > pattern intersection 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "match",
}
`;

exports[`expressions > pattern matching > pattern union 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "match",
}
`;

exports[`expressions > pattern matching > with 'is' operator 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with default value 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with name for match 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with placeholder 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with rename 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with rest value 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with rest value first 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > pattern matching > with variable value 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "x",
}
`;

exports[`expressions > structured programming > block mutable variable declaration 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "{",
}
`;

exports[`expressions > structured programming > block pattern matching 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "{",
}
`;

exports[`expressions > structured programming > block variable assignment 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "{",
}
`;

exports[`expressions > structured programming > block variable declaration 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "{",
}
`;

exports[`expressions > structured programming > for loop 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "for",
}
`;

exports[`expressions > structured programming > if-then 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "if",
}
`;

exports[`expressions > structured programming > if-then-else 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "if",
}
`;

exports[`expressions > structured programming > while loop 1`] = `
{
  "children": [],
  "data": {
    "relativeIndex": -1,
    "scope": Scope {
      "names": {},
      "scope": [],
    },
  },
  "name": "name",
  "value": "while",
}
`;
